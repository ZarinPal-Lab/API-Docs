
# Group RequestMoney

## request money [/requestMoney.json]

### RequestMoney [POST]

+ Request (application/json)

    + Headers
    Authorization: Bearer [access_token]

+ Response 200 (application/json)
    + Body
    {
      "debtor" : [
          	{
          		"zp" : 111242,
          		"amount" : 100
          	},
          	{
          		"zp" : 2,
          		"amount" : 200
          	}
      	],
      "purse_number" : 1,
      "description" : "babate pole shame dishab."
    }

    + Schema
      {
      "properties" : {
        "debtor" : {
          "type" : "array",
            "items" : {
            "type" : "object",
            "properties" : {
              "zp" : {
                  "type" : "integer",
                  "description" : "i want money form user"
              },
              "amount" : {
                  "type" : "integer"
              }
            }
          },
        },
        "properties" : {
          "purse_number" : {
                "type" : "integer",
                "description" : "my purse number",
            }
        },
        "properties" : {
          "description" : {
                "type" : "string",
            }
        },
      }

+ Response 400 (application/json)

  + Body
    {
        "meta": {
        "code": 400,
        "error_type": "PurseNotFound",
        "error_message": "Purse Not Found."
        }
    }

+ Response 200 (application/json)

    + Body
    {
      "meta": {
        "code": 200,
        "message": "send request money successfully"
        }
    }

## demand [/requestMoney/listDemand.json]

### List Demand [GET]

+ Request (application/json)

    + Headers
    Authorization: Bearer [access_token]

+ Response 200 (application/json)

    + Body
    {
    "data": [
      {
        "entity_id": "584fce781731d100072c5473",
        "user": [
          {
            "zp": 1234,
            "name": "user zarinpal",
            "avatar": "//gravatar.com/avatar/bd3bb35bd7c5389b7a?s=128&r=g&d=mm",
            "amount": 100,
            "status": "pending"
          },
        ],
        "purse_number": 1,
        "description": "i am need to 100 T"
      }
    ],
    }

    + Schema
    {
      "type" : "array",
      "items" : {
          "type" : "object",
          "properties" : {
              "entity_id" : {
                  "entity_id" : "string",
                  "description" : "entity id for this request money"
              },
              "user" : {
                "type" : "object",
                "properties" : {
                  "zp" : {
                      "type" : "integer"
                  },
                  "name" : {
                      "type" : "string",
                      "description" : "i want money form user"
                  },
                  "avatar" : {
                      "type" : "string"
                    },
                  "amount" : {
                      "type" : "string"
                    },
                  "status" : {
                      "type" : "string"
                    },
                }
            },
            "purse_number" : {
                  "type" : "integer",
                  "description" : "my purse number",
              },
            "description" : {
                  "type" : "string",
              }
          }
       }
     }

## List Debt [/requestMoney/listDebt.json]

### List Debt [GET]

+ Request (application/json)

   + Headers
   Authorization: Bearer [access_token]

+ Response 200 (application/json)

   + Body
   {
     "data": [
        {
          "zp": 1234,
          "name": "user test",
          "avatar": "//gravatar.com/avatar/d304b8d789efcfdba035a2d39f458?s=128&r=g&d=mm",
          "amount": 100,
          "status": "pending",
          "description": "i am need to 200 T"
        }
     ]
   }
   + Schema
   {
     "type" : "array",
     "items" : {
         "type" : "object",
         "properties" : {
              "zp" : {
                "type" : "integer"
              },
              "name" : {
                "type" : "string"
              },
              "avatar" : {
                "type" : "string"
              },
              "amount" : {
                "type" : "integer"
              },
              "status" : {
                "type" : "string"
              },
             "description" : {
                "type" : "string"
             }
         }
      }
    }

## Request Money between two user [/requestMoney.json?zp=[public_id_user]]

### Request Money 2 user [GET]

+ Request (application/json)

    + Headers
    Authorization: Bearer [access_token]

+ Response 200 (application/json)

    + Body
    {
    "data": [
         {
           "zp": 1234,
           "name": "user test",
           "avatar": "//gravatar.com/avatar/d304b8d789efcfdba035a2d39f458?s=128&r=g&d=mm",
           "amount": 100,
           "status": "pending",
           "description": "i am need to 200 T"
         }
       ]
    }

    + Schema
    {
      "type" : "array",
      "items" : {
          "type" : "object",
          "properties" : {
               "zp" : {
                 "type" : "integer"
               },
               "name" : {
                 "type" : "string"
               },
               "avatar" : {
                 "type" : "string"
               },
               "amount" : {
                 "type" : "integer"
               },
               "status" : {
                 "type" : "string"
               },
              "description" : {
                 "type" : "string"
              }
          }
       }
     }

 ## reject request money [/requestMoney.json]

 ### Reject request [PUT]

 + Request (application/json)

     + Headers
     Authorization: Bearer [access_token]

 + Response 200 (application/json)
     + Body
     {
     		"entity_id" : "58557b71731d100073f23"
     }

    + Schema
     {
       "properties" : {
         "entity_id" : {
               "type" : "string",
               "description" : "entity id for request money",
           }
       }
     }

 + Response 400 (application/json)

   + Body
     {
         "meta": {
           "code": 400,
           "error_type": "RequestMoneyNotFound",
           "error_message": "RequestMoney Not Found."
         }
     }

 + Response 200 (application/json)

     + Body
     {
       "meta": {
         "code": 200,
         "message": "Reject request money successfully."
         }
     }
