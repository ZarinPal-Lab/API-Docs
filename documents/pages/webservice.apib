
# Group Webservices

## list webservices [/webservice/index.json]

Get list of current users Webservice

### List All Webservices [GET]

+ Request (application/json)

    + Headers
    Authorization: access_token

+ Response 400 (application/json)

  + Body
    {
        "meta": {
          "code": 400,
          "error_type": "WebserviceNotFound",
          "error_message": "Webservice Not Found."
        }
    }

+ Response 200 (application/json)

  + Body
  {
      "data":
        {
          "entity_id": "4a0b7ff2-67ac-11e6-b8c295eb8fc",
          "status": true,
          "purse": 1,
          "category_id": 10,
          "tel": "09122182569",
          "domain": "htpp://www.test.com",
          "ip": null,
          "name": "test",
          "description": "description for test",
          "ussd_id": null,
          "zaringate_status": "NotActivated",
          "logo": "//logoland.zarinpal.com/6e76cc60647c3d288631bf3ed444dd2b/125x125.png"
        },
        "meta": {
          "code": 200
        }
  }

  + Schema
  {
    "type" : "array",
    "items" : {
        "type" : "object",
        "properties" : {
            "entity_id" : {
                "type" : "string"
            },
            "status" : {
                "type" : "boolean",
                "description" : "if set status true this webservice is active else it's not Active",
            },
            "purse" : {
                "type" : "integer"
            },
            "category_id" : {
                "type" : "integer"
            },
            "tel" : {
                "type" : "string"
            },
            "domain" : {
                "type" : "string"
            },
            "ip" : {
                "type" : "string",
                "description" : "if set ip is null ,this webservice not limited else it's on limited",
            },
            "tel" : {
                "type" : "string"
            },
            "tel" : {
                "type" : "string"
            },
            "tel" : {
                "type" : "string"
            },
            "tel" : {
                "type" : "string"
            },
            "tel" : {
                "type" : "string"
            },
        }
    }
  }

## purse add [/purse/add.json]

Add one user's purse

### Add Purse [POST]

+ Request (application/json)

    + Headers
    Authorization: access_token

    + body
    {
      "purse" : "1",
      "name" : "test1"
    }

+ Response 400 (application/json)

    + Body
      {
          "meta": {
          "code": 400,
          "error_type": "PurseLimit",
          "error_message": "You can not create more purses."
          }
      }
+ Response 400 (application/json)

    + Body
      {
          "meta": {
          "code": 400,
          "error_type": "PurseNotEnoughCredit",
          "error_message": "Purse does not have enough credit."
          }
      }

+ Response 200 (application/json)

  + Body
    {
      "meta": {
        "code": 200,
        "message": "purse added successfully"
      }
    }

## list purse [/purse/list.json]

List purse current user

### List All Purses [GET]

+ Request (application/json)

    + Headers
    Authorization: access_token

+ Response 400 (application/json)

    + Body
      {
          "meta": {
          "code": 400,
          "error_type": "PurseNotFound",
          "error_message": "Purse Not Found."
          }
      }

+ Response 200 (application/json)

  + body
  {
      "data":
        {
          "purse": 1,
          "name": "اصلی زرين پال",
          "balance": 846200,
          "updated_at": "2016-05-23 09:58:18"
        },
        "meta": {
          "code": 200
        }
  }

## purse balance [/purse/balance/purse_number.json]

get user's purse balance

### Purse Balance [GET]

+ Request (application/json)

    + Headers
    Authorization: access_token

+ Response 400 (application/json)

    + Body
      {
          "meta": {
            "code": 400,
            "error_type": "PurseNotFound",
            "error_message": "Purse Not Found."
          }
      }
+ Response 200 (application/json)

  + Body
        "meta": {
          "code": 200,
          },
       "data": {
           "balance": 846200,
           "today_income": 0,
           "today_outcome": 0
       }

## purse info [/purse/info/:zp.0.0 or email or mobile.json]

Show info purse current user

### Get Info Purse [GET]

+ Request (application/json)

    + Headers
    Authorization: access_token

+ Response 400 (application/json)

    + Body
      {
          "meta": {
            "code": 400,
            "error_type": "UserNotFound",
            "error_message": "User Not Found."
          }
      }
+ Response 400 (application/json)

    + Body
      {
          "meta": {
            "code": 400,
            "error_type": "PurseNotFound",
            "error_message": "Purse Not Found."
          }
      }

+ Response 200 (application/json)

  + Body
      "meta": {
          "code": 200
      },
      "purse": 1,
      "public_id": 0,
      "name": "مصطفی امیری",
      "email_hash": "asdfghjklzxcvbnmoiuytrewas",
      "zp_id": "ZP.0.0"

## edit purse [/purse/edit/{purseNumber}.json]

Edit name purse

### Edit Purse [POST]

+ Request (application/json)

    + Headers
    Authorization: access_token

    +Body
      {
        "name" : "test2"
      }

+ Response 400 (application/json)

    + Body
      {
          "meta": {
            "code": 400,
            "error_type": "PurseNotFound",
            "error_message": "Purse Not Found."
          }
      }

+ Response 200 (application/json)

  + Body
      "meta": {
          "code": 200,
          "message": "Update name purse successfully."
      }
