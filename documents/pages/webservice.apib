
# Group Webservices

## list webservices [/webservice/index.json]

Get list of current users Webservice

### List All Webservices [GET]

+ Request (application/json)

    + Headers
    Authorization: {{access_token}}

+ Response 400 (application/json)

  + Body
    {
        "meta": {
          "code": 400,
          "error_type": "WebserviceNotFound",
          "error_message": "Webservice Not Found."
        }
    }

+ Response 200 (application/json)

  + Body
  {
      "data": [
        {
          "entity_id": "4a0b7ff2-67ac-11e6-b8c295eb8fc",
          "status": true,
          "purse": 1,
          "category_id": 10,
          "tel": "09122182569",
          "domain": "htpp://www.test.com",
          "ip": null,
          "name": "test",
          "description": "description for test",
          "ussd_id": null,
          "zaringate_status": "NotActivated",
          "logo": "//logoland.zarinpal.com/6e76cc60647c3d288631bf3ed444dd2b/125x125.png"
        ,
        "meta": {
          "code": 200
        }
      }
        ]
  }

  + Schema
  {
    "type" : "array",
    "items" : {
        "type" : "object",
        "properties" : {
            "entity_id" : {
                "type" : "string"
            },
            "status" : {
                "type" : "boolean",
                "description" : "if set status true this webservice is active else it's not Active",
            },
            "purse" : {
                "type" : "integer"
            },
            "category_id" : {
                "type" : "integer",
                "description" : "webservice's category"
            },
            "tel" : {
                "type" : "string"
            },
            "domain" : {
                "type" : "string"
            },
            "ip" : {
                "type" : "string",
                "description" : "if set ip is null ,this webservice not limited else it's on limited",
            },
            "name" : {
                "type" : "string"
            },
            "description" : {
                "type" : "string"
            },
            "ussd_id" : {
                "type" : "string",
                "description" : "code ussd"
            },
            "zaringate_status" : {
                "type" : "string",
                "description" : "check request for zaringate"
            },
            "logo" : {
                "type" : "string",
                "description" : "This is url for show logo"
            }
        }
    }
  }

## show webservice [/webservice/show/{{webservice_entity_id}}.json]

Get show information for one webservice

### List All Webservices [GET]

+ Request (application/json)

    + Headers
    Authorization: {{access_token}}

+ Response 400 (application/json)

  + Body
    {
        "meta": {
          "code": 400,
          "error_type": "WebserviceNotFound",
          "error_message": "Webservice Not Found."
        }
    }

+ Response 200 (application/json)

  + Body
  {
      "data":
        {
          "entity_id": "4a0b7ff2-67ac-11e6-b8c295eb8fc",
          "status": true,
          "purse": 1,
          "category_id": 10,
          "tel": "09122182569",
          "domain": "htpp://www.test.com",
          "ip": null,
          "name": "test",
          "description": "description for test",
          "ussd_id": null,
          "zaringate_status": "NotActivated",
          "logo": "//logoland.zarinpal.com/6e76cc60647c3d288631bf3ed444dd2b/125x125.png"
        },
        "meta": {
          "code": 200
        }
  }

  + Schema
  {
      "type" : "object",
      "properties" : {
          "entity_id" : {
              "type" : "string"
          },
          "status" : {
              "type" : "boolean",
              "description" : "if set status true this webservice is active else it's not Active",
          },
          "purse" : {
              "type" : "integer"
          },
          "category_id" : {
              "type" : "integer",
              "description" : "webservice's category"
          },
          "tel" : {
              "type" : "string"
          },
          "domain" : {
              "type" : "string"
          },
          "ip" : {
              "type" : "string",
              "description" : "if set ip is null ,this webservice not limited else it's on limited",
          },
          "name" : {
              "type" : "string"
          },
          "description" : {
              "type" : "string"
          },
          "ussd_id" : {
              "type" : "string",
              "description" : "code ussd"
          },
          "zaringate_status" : {
              "type" : "string",
              "description" : "check request for zaringate"
          },
          "logo" : {
              "type" : "string",
              "description" : "This is url for show logo"
          }
      }
  }

## post request webservice [/webservice/request.json]

Request for new webservice

### Request New Webservice [POST]

+ Request (application/json)

    + Headers
    Authorization: {{access_token}}

    + Body
      {
        "domain" : "www.test2.com",
        "tel" : "09351309626",
        "purse" : 1,
        "webservice_category_id" : 10,
        "site_name" : "test api",
        "site_content" : "test content for creeat webservice"
      }

    + Schema
    {
        "type" : "object",
        "properties" : {
            "purse" : {
                "type" : "integer"
            },
            "webservice_category_id" : {
                "type" : "integer",
                "description" : "webservice's category"
            },
            "tel" : {
                "type" : "string"
            },
            "domain" : {
                "type" : "string"
            },
            "site_name" : {
                "type" : "string"
            },
            "site_content" : {
                "type" : "string"
            }
        }
    }

+ Response 400 (application/json)

  + Body
    {
        "meta": {
          "code": 400,
          "error_type": "WebserviceNotFound",
          "error_message": "Webservice Not Found."
        }
    }

+ Response 400 (application/json)

  + Body
    {
        "meta": {
          "code": 400,
          "error_type": "WebserviceUniqueDomain",
          "error_message": "This Domain is exists."
        }
    }


+ Response 400 (application/json)

  + Body
    {
        "meta": {
          "code": 400,
          "error_type": "WebserviceFreeDomain",
          "error_message": "This is a free domain."
        }
    }

+ Response 200 (application/json)

  + Body
  {
        "meta": {
          "code": 200,
          "message": "Post request for webservice successfully"
        }
  }

## show price Zaringate for all webservices [/webservice/priceZaringate.json]

Get price for request zarin gate

### PRICE REQUEST ZARINGATE [GET]

+ Request (application/json)

    + Headers
    Authorization: {{access_token}}

+ Response 200 (application/json)

  + Body
  {
  "data": [
          {
            "webservice": "4a0b7ff2-67ac-11e000c295eb8fc",
            "amount": 20000
          }
      ],
      "meta": {
          "code": 200
      }
  }

  + Schema
  {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
            "webservice" : {
                "type" : "string",
                "description" : "webservice's entity_id"
            },
            "amount" : {
                "type" : "integer",
                "description" : "price zaringate for this webservice",
            }
        }
      }
  }
