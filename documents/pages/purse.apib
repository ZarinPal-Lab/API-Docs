
# Group Purses

## create purse [/purse.json]

Create one user's purse

### Create Purse [POST]

+ Request (application/json)

    + Headers
    Authorization: Bearer [access_token]

    + Body
    {
      "purse" : "1",
      "name" : "test1"
    }

    + Schema
    {
        "type": "object",
        "properties": {
          "purse": {
            "type": "string",
            "description": "selected purse for cost create new purse"
            },
          "name": {
            "type": "string",
            "description": "name for new purse"
        }
      }
    }

+ Response 400 (application/json)

    + Body
      {
          "meta": {
          "code": 400,
          "error_type": "PurseLimit",
          "error_message": "You can not create more purses."
          }
      }

+ Response 400 (application/json)

    + Body
      {
          "meta": {
          "code": 400,
          "error_type": "PurseNotEnoughCredit",
          "error_message": "Purse does not have enough credit."
          }
      }

+ Response 200 (application/json)

  + Body
    {
      "meta": {
        "code": 200,
        "message": "purse added successfully"
      }
    }

## list purse [/purse.json]

List purse current user

### List All Purses [GET]

+ Request (application/json)

    + Headers
    Authorization: Bearer [access_token]

+ Response 400 (application/json)

    + Body
      {
          "meta": {
          "code": 400,
          "error_type": "PurseNotFound",
          "error_message": "Purse Not Found."
          }
      }

+ Response 200 (application/json)

  + Body
  {
      "data":[
      {
          "purse": 1,
          "name": "اصلی زرين پال",
          "balance": 846200,
          "updated_at": "2016-05-23 09:58:18",
          "meta": {
          "code": 200
          }
        }
      ]
  }

  + Schema
  {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "purse": {
          "type": "integer",
          "description": "purse's nember"
        },
        "name": {
          "type": "string",
          "description": "purse's name"
        },
        "balance": {
          "type": "integer",
          "description": "purse's balance"
        },
        "updated_at": {
          "type": "string",
          "description": "update date for this purse"
        }
      }
    }
  }

## balance purse [/purse/balance/[purse_number].json]

get user's purse balance

### Balance Purse [GET]

+ Request (application/json)

    + Headers
    Authorization: Bearer [access_token]

+ Response 400 (application/json)

    + Body
      {
          "meta": {
            "code": 400,
            "error_type": "PurseNotFound",
            "error_message": "Purse Not Found."
          }
      }

+ Response 200 (application/json)

  + Body
    {
       "data": {
           "balance": 846200,
           "today_income": 0,
           "today_outcome": 0
       },
       "meta": {
         "code": 200,
       },
    }

   + Schema
   {
       "type" : "object",
       "properties" : {
         "balance" : {
           "type" : "integer",
           "description" : "purse's balance"
         },
         "today_income" : {
           "type" : "integer",
           "description" : "purse's income in today"
         },
         "today_outcome" : {
           "type" : "integer",
           "description" : "purse's outcome in today"
         }
      }
   }

## show purse [/purse/[:zp.0.0] or [email] or [mobile].json]

Show info purse current user

### Show Purse [GET]

+ Request (application/json)

    + Headers
    Authorization: Bearer [access_token]

+ Response 400 (application/json)

    + Body
      {
          "meta": {
            "code": 400,
            "error_type": "UserNotFound",
            "error_message": "User Not Found."
          }
      }
+ Response 400 (application/json)

    + Body
      {
          "meta": {
            "code": 400,
            "error_type": "PurseNotFound",
            "error_message": "Purse Not Found."
          }
      }

+ Response 200 (application/json)

  + Body
    {
        "data" : {
          "purse": 1,
          "public_id": 0,
          "name": "مصطفی امیری",
          "email_hash": "asdfghjklzxcvbnmoiuytrewas",
          "zp_id": "ZP.0.0"
        },
        "meta": {
            "code": 200
        },
    }

    + Schema
    {
      "type" : "object",
      "properties" : {
        "purse" : {
          "type" : "integer",
          "description" : "purse's number"
        },
        "public_id" : {
          "type" : "integer",
          "description" : "user's public id"
        },
        "name" : {
          "type" : "string",
          "description" : "user's name"
        },
        "email_hash" : {
          "type" : "string",
          "description" : "user's email hash"
        },
        "zp_id" : {
          "type" : "string",
          "description" : "user's zp"
        }
      }
  }


## edit purse [/purse/[purse_number].json]

Edit name purse

### Edit Purse [PUT]

+ Request (application/json)

    + Headers
    Authorization : [access_token]

    +Body
      {
        "name" : "test2"
      }

    + Schema
      {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "purse's name"
          }
        }
    }

+ Response 400 (application/json)

    + Body
      {
          "meta": {
            "code": 400,
            "error_type": "PurseNotFound",
            "error_message": "Purse Not Found."
          }
      }

+ Response 200 (application/json)

  + Body
    {
      "meta": {
          "code": 200,
          "message": "Update name purse successfully."
      }
    }
