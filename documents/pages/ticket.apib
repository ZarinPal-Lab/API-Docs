
# Group Tickets

## tickets getSummary [/ticket/summary.json]

List summary user's tickets

### GetSummary Tickets [GET]

+ Request (application/json)

    + Headers
    Authorization : {access_token}

+ Response 200 (application/json)

  + Body
    {
    "data": {
          "open": 1,
          "unread": 2
        },
        "meta": {
          "code": 200
        }
    }

  + Schema
    {
      "type": "object",
      "properties": {
        "open": {
          "type": "integer",
          "description": "open ticket's count number"
        },
        "unread": {
          "type": "integer",
          "description": "unread ticket's count number"
        }
      }
    }

## list tickets [/ticket/index.json]

List ticket of user

### List All Ticket [GET]

+ Request (application/json)

    + Headers
    Authorization : {access_token}

+ Response 200 (application/json)

  + Body
  {
  "data": [
    {
      "title": "درخواست وب‌سرویس برای وب‌سایت test",
      "ticket_department_id": 1,
      "public_id": 139411070120,
      "priority": "normal",
      "status": "close",
      "read_status": {
        "first": true,
        "second": null
      },
      "created_at": "2016-01-27 15:43:40",
      "updated_at": "2016-09-24 13:26:31"
    }
    ],
    "meta": {
      "code": 200,
      "pagination": {
        "per_page": 10,
        "current_page": 1,
        "links": {
          "previous": null,
          "next": "https://api.zarinpal.com/rest/v3/ticket/index.json?page=2"
        }
      }
  }

  + Schema
  {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "ticket_department_id": {
          "type": "integer",
          "description": "ticket's department"
        },
        "public_id": {
          "type": "integer"
        },
        "status": {
          "type": "string",
          "description": "ticket's status"
        },
        "read_status": {
          "type": "object",
          "properties": {
            "first": {
                "type" : "boolean",
                "description" : "if set true it's mean user read ticket else unread"
            },
            "second": {
                "type" : "boolean",
                "description" : "if set true it's mean secound user read ticket else unread"
            },
          },
          "created_at" : {
              "type" : "string"
          },
          "updated_at" : {
              "type" : "string"
          }
        }
      }
    }
  }

## list department [/ticket/getDepartment.json]

List all department

### List Ticket's Department [GET]

+ Request (application/json)

    + Headers
    Authorization : {access_token}

+ Response 200 (application/json)

  + Body
    {
       "data": [
         {
             "entity_id": 2,
            "name": "درخواست تاييد اطلاعات"
         },
       ],
       "meta": {
         "code": 200,
       },
    }

   + Schema
   {
      "type" : "array",
      "items" : {
         "type" : "object",
         "properties" : {
             "entity_id" : {
               "type" : "integer"
             },
             "name" : {
               "type" : "string"
             }
         }
      }
   }

## ticket show [/ticket/show/{ticket_entity_id}.json]

List replies of ticket

### List Replies For one Ticket [GET]

+ Request (application/json)

    + Headers
    Authorization : {access_token}

+ Response 400 (application/json)

    + Body
      {
          "meta": {
            "code": 400,
            "error_type": "TicketNotFound",
            "error_message": "Ticket Not Found."
          }
      }

+ Response 200 (application/json)

  + Body
    {
    "data": {
        "title": "درخواست وب‌سرویس برای وب‌سایت test",
        "ticket_department_id": 1,
        "public_id": 139411070120,
        "priority": "normal",
        "status": "close",
        "read_status": {
          "first": true,
          "second": null
        },
        "created_at": "2016-01-27 15:43:40",
        "updated_at": "2016-09-24 13:26:31",
        "replies": [
            {
              "content": "tes",
              "ip": "1.1.1.1",
              "attachment": null,
              "created_at": "2016-01-27 15:43:40",
              "user_info": {
                "name": "مسعود لطفي",
                "public_id": 111242,
                "email_hash": "9d8001efb3c5fcd82a73cc2e70a5"
              }
            }
          ]
        }
    }

    + Schema
    {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "ticket_department_id": {
            "type": "integer",
            "description": "ticket's department"
          },
          "public_id": {
            "type": "integer"
          },
          "status": {
            "type": "string",
            "description": "ticket's status"
          },
          "read_status": {
            "type": "object",
            "properties": {
              "first": {
                  "type" : "boolean",
                  "description" : "if set true it's mean user read ticket else unread"
              },
              "second": {
                  "type" : "boolean",
                  "description" : "if set true it's mean secound user read ticket else unread"
              },
            },
            "created_at" : {
                "type" : "string"
            },
            "updated_at" : {
                "type" : "string"
            }
          }
        }
      }
    }

  ## list department [/ticket/getDepartment}.json]

  List all department

  ### List Ticket's Department [GET]

  + Request (application/json)

      + Headers
      Authorization : {access_token}

  + Response 200 (application/json)

    + Body
      {
         "data": [
           {
               "entity_id": 2,
              "name": "درخواست تاييد اطلاعات"
           },
         ],
         "meta": {
           "code": 200,
         },
      }

     + Schema
     {
        "type" : "array",
        "items" : {
           "type" : "object",
           "properties" : {
               "entity_id" : {
                 "type" : "integer"
               },
               "name" : {
                 "type" : "string"
               }
           }
        }
     }

  ## ticket show [/ticket/show/{ticket_entity_id}.json]

  List replies of ticket

  ### List Replies For one Ticket [GET]

  + Request (application/json)

      + Headers
      Authorization : {access_token}

  + Response 400 (application/json)

      + Body
        {
            "meta": {
              "code": 400,
              "error_type": "TicketNotFound",
              "error_message": "Ticket Not Found."
            }
        }

  + Response 200 (application/json)

    + Body
      {
      "data": {
          "title": "درخواست وب‌سرویس برای وب‌سایت test",
          "ticket_department_id": 1,
          "public_id": 139411070120,
          "priority": "normal",
          "status": "close",
          "read_status": {
            "first": true,
            "second": null
          },
          "created_at": "2016-01-27 15:43:40",
          "updated_at": "2016-09-24 13:26:31",
          "replies": [
              {
                "content": "tes",
                "ip": "1.1.1.1",
                "attachment": null,
                "created_at": "2016-01-27 15:43:40",
                "user_info": {
                  "name": "مسعود لطفي",
                  "public_id": 111242,
                  "email_hash": "9d8001efb3c5fcd82a73cc2e70a5"
                }
              }
            ]
          }
      }

    + Schema
    {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "ticket_department_id": {
            "type": "integer",
            "description": "ticket's department"
          },
          "public_id": {
            "type": "integer"
          },
          "priority": {
            "type": "string",
            "description": "ticket's priority"
          },
          "status": {
            "type": "string",
            "description": "ticket's status"
          },
          "read_status": {
            "type": "object",
            "properties": {
              "first": {
                  "type" : "boolean",
                  "description" : "if set true it's mean user read ticket else unread"
              },
              "second": {
                  "type" : "boolean",
                  "description" : "if set true it's mean secound user read ticket else unread"
              },
            },
            "created_at" : {
                "type" : "string"
            },
            "updated_at" : {
                "type" : "string"
            }
          },
          "replies" : {
              "type" : "array",
              "items" : {
                  "type" : "object",
                  "properties" : {
                      "content": {
                        "type": "string"
                      },
                      "ip" : {
                        "type" : "string"
                      },
                      "attachment" : {
                        "type" : "string"
                      },
                      "created_at" : {
                        "type" : "string"
                      },
                      "user_info" : {
                        "type" : "object",
                        "properties" : {
                            "name": {
                              "type" : "string",
                              "description" : "name for user's reply"
                            },
                            "public_id" : {
                              "type" : "string",
                              "description" : "public_id for user's reply"
                            },
                            "email_hash" : {
                              "type" : "string",
                              "description" : "email hash for user's reply"
                            }
                        }
                      }
                  }
              }
          }
        }
      }
    }

## create ticket [/ticket/create.json.json]

Create new Ticket

### Create Ticket [POST]

+ Request (application/json)

  + Headers
  Authorization : {access_token}

  + Body
    {
      "title" : "title of ticket",
      "content" : "content of ticket",
      "ticket_department_id" : 3,
      "priority" : 2
    }

  + Schema
    {
      "type" : "object",
      "properties" : {
        "title" : {
          "type" : "string",
        },
        "content" : {
          "type" : "string",
        },
        "ticket_department_id" : {
          "type" : "integer",
        },
        "priority" : {
          "type" : "integer"
        }
  }

+ Response 200 (application/json)

  + Body
    {
      "meta": {
          "code": 200,
          "message": "ticket create successfully."
      }
    }

## reply ticket [/ticket/reply/{ticket_entity_id}.json]

Reply new Ticket

### Reply Ticket [POST]

+ Request (application/json)

    + Headers
    Authorization : {access_token}

    +Body
      {
        "content" : "content of ticket",
        "attachment" : "null"
      }

    + Schema
      {
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "string",
          },
          "attachment" : {
            "type" : "strong",
            "description" : "upload file."
          }
        }
      }

+ Response 200 (application/json)

  + Body
    {
      "meta": {
          "code": 200,
          "message": "reply ticket send successfully"
      }
    }

## close ticket [/ticket/close.json]

Close Ticket

### Close Ticket [PUT]

+ Request (application/json)

    + Headers
    Authorization : {access_token}

    +Body
      {
        "ticket_public_id" : "ticket's public_id",
      }

    + Schema
      {
        "type" : "object",
        "properties" : {
          "ticket_public_id" : {
            "type" : "integer",
          }
        }
      }

  + Response 400 (application/json)

      + Body
        {
            "meta": {
              "code": 400,
              "error_type": "TicketNotFound",
              "error_message": "Ticket Not Found."
            }
        }

+ Response 200 (application/json)

  + Body
    {
      "meta": {
          "code": 200,
          "message": "ticket close successfully"
      }
    }

## ticket find [/ticket/{ticket_public_id}.json]

Find ticket by {ticket_public_id}

### Find Ticket [GET]

+ Request (application/json)

    + Headers
    Authorization : {access_token}

+ Response 400 (application/json)

    + Body
      {
          "meta": {
            "code": 400,
            "error_type": "TicketNotFound",
            "error_message": "Ticket Not Found."
          }
      }

+ Response 200 (application/json)

  + Body
    {
    "data": {
        "title": "درخواست وب‌سرویس برای وب‌سایت test",
        "ticket_department_id": 1,
        "public_id": 139411070120,
        "priority": "normal",
        "status": "close",
        "read_status": {
          "first": true,
          "second": null
        },
        "created_at": "2016-01-27 15:43:40",
        "updated_at": "2016-09-24 13:26:31",
        }
    }

    + Schema
    {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "ticket_department_id": {
            "type": "integer",
            "description": "ticket's department"
          },
          "public_id": {
            "type": "integer"
          },
          "status": {
            "type": "string",
            "description": "ticket's status"
          },
          "read_status": {
            "type": "object",
            "properties": {
              "first": {
                  "type" : "boolean",
                  "description" : "if set true it's mean user read ticket else unread"
              },
              "second": {
                  "type" : "boolean",
                  "description" : "if set true it's mean secound user read ticket else unread"
              },
            },
            "created_at" : {
                "type" : "string"
            },
            "updated_at" : {
                "type" : "string"
            }
          }
        }
      }
    }
