# Group OAuth

## logout [/oauth/logout.json]

logout user in app

### logout [GET]

+ Request (application/json)

    + Headers
    Authorization : [access_token]

+ Response 400 (application/json)

  + Body
    {
        "meta": {
        "code": 400,
        "error_type": "InvalidCredentials",
        "error_message": "The user credentials were incorrect."
        }
    }

+ Response 200 (application/json)

  + Body
    {
      "meta": {
        "code": 200,
        "message": "Session Expired Successfully."
        }
    }

## register [/oauth/registerUser.json ]

register new user

### Post Register [POST]

+ Request (application/json)

    + Body
      {
        "first_name" : "tehran",
        "last_name" : "12222222",
        "mobile" : "09351123334"
      }

    + Schema
      {
          "type" : "object",
          "properties" : {
              "first_name" : {
                "type" : "string"
              },
              "last_name" : {
                "type" : "string"
              },
              "mobile": {
                "type" : "string"
              }
          }
      }

+ Response 200 (application/json)

    + Body
    {
      "meta": {
        "code": 200,
        "message": "you are registered, now verify your email address."
        }
    }

## Resend Mobile verification [/oauth/resendMobileVerifyCode.json]

Resend Mobile Verify Code

### Post Resend Mobile Verify Code [POST]

+ Request (application/json)

    + Body
      {
          "username" : "test@gmail.com"
      }

    + Schema
      {
          "type" : "object",
          "properties" : {
              "username" : {
                "type" : "string"
              }
          }
      }

+ Response 400 (application/json)

  + Body
    {
        "meta": {
        "code": 400,
        "error_type": "OauthInvalidCredentials",
        "error_message": "The user credentials were incorrect."
        }
    }

  + Response 400 (application/json)

    + Body
      {
          "meta": {
          "code": 400,
          "error_type": "OauthUserMobileVerifiedBefore",
          "error_message": "this user's mobile verified before."
          }
      }

+ Response 200 (application/json)

    + Body
    {
      "meta": {
        "code": 200,
        "message": "we sent new verification code, wait 15min before trying again.",
        "verification_wait_time": 15
        }
    }

## Verify Mobile [/oauth/mobileVerification.json]

Verify user mobile

### Verify Mobile [POST]

+ Request (application/json)

    + Body
      {
          "username" : "test@gmail.com",
          "code":"######"
      }

    + Schema
      {
          "type" : "object",
          "properties" : {
              "username" : {
                "type" : "string"
              },
              "code" : {
                "type" : "string"
              }
          }
      }

+ Response 400 (application/json)

  + Body
    {
        "meta": {
        "code": 400,
        "error_type": "TokenNotFound",
        "error_message": "Token not found."
        }
    }

  + Response 400 (application/json)

    + Body
      {
          "meta": {
          "code": 400,
          "error_type": "TokenMismatch",
          "error_message": "Token mismatch."
          }
      }

+ Response 400 (application/json)

  + Body
    {
        "meta": {
        "code": 400,
        "error_type": "VerifiedBeforeCellphone",
        "error_message": "Mobile require validate."
        }
    }

+ Response 200 (application/json)

    + Body
    {
      "meta": {
        "code": 200,
        "message": "you mobile number verified."
        }
    }
